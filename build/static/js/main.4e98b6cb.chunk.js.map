{"version":3,"sources":["components/Card/index.js","components/Header/index.js","components/Navbar/index.js","components/Footer/index.js","components/Container/index.js","App.js","index.js"],"names":["Card","props","react_default","a","createElement","className","id","src","image","alt","onClick","handleClick","Header","children","Navbar","Footer","Container","App","state","data","score","topScore","resetGame","console","log","temp","_this","map","eachItem","Object","objectSpread","isClicked","setState","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","handleItemClick","event","firstClick","target","upDateData","element","tempImg","parseInt","newScore","newTopScore","max","this","_this2","components_Navbar","components_Header","components_Container","oneImage","components_Card","key","components_Footer","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4e98b6cb.chunk.js","sourcesContent":["import React from 'react'\nimport './style.css'\n\nfunction Card (props) {\n  // console.log(\"!!!!!!!!!!!!!!!!!!!!1\")\n  // console.log(props)\n  return (\n    <div className='card'>\n      <div className='img-container'>\n        {/* Make Image clickable for all pictures in card */}\n        <img id={props.id} src={props.image} alt={props.id} onClick={props.handleClick} />\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n  return <div className=\"header\">{props.children}</div>\n}\n\nexport default Header;\n","import React from 'react'\n// import { Link } from 'react-router-dom'\nimport './style.css'\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar (props) {\n  return (\n    <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n      <h1 className='title'>{props.children}</h1>\n    </nav>\n  )\n}\nexport default Navbar\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer(props) {\n  return (\n    <footer className=\"footer\">{props.children}</footer>\n  )\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Container(props) {\n  return <div className=\"container\">{props.children}</div>\n}\n\nexport default Container;\n","import React from 'react';\r\nimport Card from './components/Card';\r\nimport Header from './components/Header';\r\nimport data from './friends.json';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\nimport Container from './components/Container';\r\n\r\nclass App extends React.Component {\r\n\r\nstate = {\r\n    data, // this is json file with all the images that you are importing\r\n    score: 0, // current user score\r\n    topScore: 0 // top score\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log('======= called did mount ======= ');\r\n\r\n    // console.log(this.state.data)\r\n    this.setState({\r\n      data: this.shuffle(this.state.data)\r\n    });\r\n  }\r\n            // passing array, this.state.data\r\n  resetGame = (data) => {\r\n  console.log(\"reset game\")  \r\n\r\n  let temp= this.state.data.map(eachItem => (\r\n    {...eachItem, isClicked: false}\r\n    ));\r\n\r\n  console.log('------------ Temp ---------------')\r\n  console.log(temp);\r\n    \r\n    this.setState({\r\n      data: this.shuffle(temp),\r\n      score: 0\r\n    })\r\n\r\n  console.log('------------ after setState ---------------')\r\n  console.log(this.state.data)\r\n  };\r\n\r\n\r\n  // https://gomakethings.com/how-to-shuffle-an-array-with-vanilla-js/\r\n  shuffle = (array) => {\r\n\r\n    var currentIndex = array.length;\r\n    var temporaryValue, randomIndex;\r\n  \r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex -= 1;\r\n  \r\n      // And swap it with the current element.\r\n      temporaryValue = array[currentIndex];\r\n      array[currentIndex] = array[randomIndex];\r\n      array[randomIndex] = temporaryValue;\r\n    }\r\n  \r\n    return array;\r\n  \r\n  };\r\n  \r\n\r\n  handleItemClick = (event) => {\r\n    let firstClick = false\r\n   let id = event.target.id\r\n\r\n  let upDateData = this.state.data.map(element => {\r\n        let tempImg = {...element}\r\n\r\n        if (tempImg.id === parseInt(id)) {\r\n\r\n          if(!tempImg.isClicked){\r\n            // User got a point\r\n            firstClick = true\r\n            tempImg.isClicked = true\r\n          }\r\n        }\r\n        return tempImg\r\n      });\r\n          console.log(upDateData);\r\n\r\n          if(firstClick === true){\r\n            // update score\r\n            \r\n            let newScore= this.state.score + 1\r\n            // Math method: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/max\r\n            let newTopScore= Math.max(newScore, this.state.topScore)\r\n            this.setState({data: this.shuffle(upDateData), score: newScore, topScore: newTopScore })\r\n            \r\n            // var _temp = {...element, isClicked: true}\r\n    console.log('!!!!!!!!!!!!!!!!!!!!!!111')\r\n    // console.log(_temp)\r\n       //      return _temp\r\n          }\r\n          else{\r\n            //gameover\r\n            this.resetGame()\r\n          }\r\n     }\r\n  \r\n  render () {\r\n    return (\r\n      <div>\r\n        <Navbar>\r\n          <div className='title'>\r\n          Navbar\r\n          <br/>\r\n          topScore= {this.state.topScore}\r\n          <br/>\r\n          score= {this.state.score}\r\n          </div>\r\n        </Navbar>\r\n        <Header>\r\n          <div className='title'>Header</div>\r\n        </Header>\r\n        <Container>\r\n         {this.state.data.map(oneImage => (\r\n            // pass properties to Card Component\r\n            <Card\r\n            id={oneImage.id}\r\n            key={oneImage.id}\r\n            image={oneImage.image}\r\n            handleClick={this.handleItemClick}\r\n            />\r\n          ))}\r\n        </Container>\r\n           <Footer>\r\n           <h2 className=\"footer\">2019</h2>\r\n           </Footer>\r\n      </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default App","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
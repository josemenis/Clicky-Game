{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","name","src","image","occupation","location","onClick","removeFriend","id","Wrapper","children","Title","App","state","friends","_this","filter","friend","setState","_this2","this","console","log","components_Wrapper","components_Title","map","components_FriendCard","key","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"imFAiCeA,MA9Bf,SAAqBC,GACnB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,uBADF,IAC0BH,EAAMM,MAEhCL,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,6BADF,IACgCH,EAAMS,YAEtCR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,0BADF,IAC6BH,EAAMU,YAQvCT,EAAAC,EAAAC,cAAA,QAAMQ,QAAS,kBAAMX,EAAMY,aAAaZ,EAAMa,KAAKT,UAAU,UAA7D,wBCnBSU,MAJf,SAAiBd,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMe,wBCG1BC,MAJf,SAAehB,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMe,WC8DvBE,oNAjDbC,MAAQ,CACNC,aAIFP,aAAe,SAACC,GAEd,IAAMM,EAAUC,EAAKF,MAAMC,QAAQE,OAAO,SAACC,GAAD,OAAYA,EAAOT,KAAOA,IAEpEO,EAAKG,SAAS,CAACJ,qFAIP,IAAAK,EAAAC,KAQR,OANAC,QAAQC,IAAI,6BACZD,QAAQC,IAAIF,KAAKP,MAAMC,SACvBO,QAAQC,IAAI,6BAKX1B,EAAAC,EAAAC,cAACyB,EAAD,KACG3B,EAAAC,EAAAC,cAAC0B,EAAD,qBACAJ,KAAKP,MAAMC,QAAQW,IAAI,SAACR,GAAD,OACtBrB,EAAAC,EAAAC,cAAC4B,EAAD,CAIDC,IAAKV,EAAOT,GAEXA,GAAIS,EAAOT,GACXP,KAAMgB,EAAOhB,KACbE,MAAOc,EAAOd,MACdC,WAAYa,EAAOb,WACnBC,SAAUY,EAAOZ,SAKlBE,aAAcY,EAAKZ,iBAlBtB,YAxBaqB,IAAMC,kBCVxBC,IAASC,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.307a575d.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\nfunction FriendCard (props) {\n  return (\n    <div className='card'>\n      <div className='img-container'>\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className='content'>\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Address:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n      {/*\n      4. In the FriendCard component use the prop that holds the `removeFriend`\n      method as a callback for an `onClick` listener on the \"remove\" span.\n      */}\n      <span onClick={() => props.removeFriend(props.id)} className='remove'>\n        ùòÖ\n      </span>\n    </div>\n  )\n}\n\nexport default FriendCard\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from 'react';\nimport FriendCard from './components/FriendCard';\nimport Wrapper from './components/Wrapper';\nimport friends from './friends.json';\nimport Title from \"./components/Title\";\nimport './App.css';\n// Docs: https://reactjs.org/docs/react-component.html\n// 1.1 Refactor the `App` component: so that it's a class component.\n/* Converting a Function to a Class:\n() You can convert a function component like Clock to a class in five steps:\n1) Create an ES6 class, with the same name, that extends React.Component.\n2) Add a single empty method to it called render().\n3) Move the body of the function into the render() method.\n4) Replace props with this.props in the render() body.\n5) Delete the remaining empty function declaration. */\nclass App extends React.Component {\n  // 1.2 Set the component's initial `state` to the `friends` JSON array.\n  state = {\n    friends\n  };\n\n  // 2.1 Add functionality to the application so that when the red X icon on a `FriendCard` is clicked, that `FriendCard` is removed from the page. To accomplish this, you should define a method inside of `App` that follows this psuedocode:\n  removeFriend = (id) => {\n    // 1) Use `Array.filter` on `this.state.friends` to create a new array that has the friend matching the passed id removed\n    const friends = this.state.friends.filter((friend) => friend.id !== id);\n    // 2) Set this.state.friends equal to the new friends array\n    this.setState({friends});\n  };\n  \n  // Only method needed to be defined is React.Component subclass render()\n  render () {\n    // make sure to console log outside of return but in render\n    console.log(\"-------------------------\")\n    console.log(this.state.friends)\n    console.log(\"-------------------------\")\n    // 1.3 Inside of the `render` method, rather than rendering each `FriendCard` component manually, \n    // use a map to render one `FriendCard` component for each object in the `friends` JSON passing in the appropriate props.\n      // Map over this.state.friends and render a FriendCard component for each friend object\n    return (\n     <Wrapper>\n        <Title>Friends List</Title>\n       {this.state.friends.map((friend) => (\n         <FriendCard\n         \n        // key is used to set id on the JSX element.\n        //  W/O it you get: \"Warning: Each child in a list should have a unique 'key'\"\n        key={friend.id}\n        // Below order matches friends.json object.\n         id={friend.id}\n         name={friend.name}\n         image={friend.image}\n         occupation={friend.occupation}\n         location={friend.location}\n         /*\n        3. You'll want to pass this new `removeFriend` \n        method as a prop into each `FriendCard` component.\n        */\n        removeFriend={this.removeFriend}\n\n         />\n       ))};\n     </Wrapper>\n    )\n  }\n}\n\nexport default App\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}